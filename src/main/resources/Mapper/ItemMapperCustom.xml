<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.springboot.mapper.ItemsMapperCustom">

    <select id="queryItemComments"  resultType="com.feng.springboot.entity.Vo.ItemCommentVo"  parameterType="Map" >
        SELECT
            ic.comment_level AS commentLevel,
            ic.content AS content,
            ic.sepc_name AS sepcName,
            ic.created_time AS createdTime,
            u.face AS userFace,
            u.nickname AS nickname
        FROM
            items_comments ic
                LEFT JOIN
            users u
            ON
                ic.user_id=u.id
        WHERE
            ic.item_id= #{paramsMap.itemId}
             <if test="paramsMap.level !=null and paramsMap.level!='' ">
          AND
            ic.comment_level=#{paramsMap.level}
             </if>
    </select>

    <resultMap id="MyNewItemsVO" type="com.feng.springboot.entity.Vo.NewItemsVo">
        <id column="rootCatId" property="rootCatId" />
        <result column="rootCatName" property="rootCatName" />
        <result column="slogan" property="slogan" />
        <result column="catImage" property="catImage" />
        <result column="bgColor" property="bgColor" />

        <collection property="simpleItemList"  ofType="com.feng.springboot.entity.Vo.SimpleItemVo">
            <id column="itemId" property="itemId" />
            <result column="itemName" property="itemName" />
            <result column="itemUrl" property="itemUrl" />
        </collection>
    </resultMap>
    <select id="getSixNewItemsLazy" resultMap="MyNewItemsVO" parameterType="Map">
        SELECT
            f.id AS rootCatId,
            f.`name` AS rootCatName,
            f.slogan AS slogan,
            f.cat_image AS catImage,
            f.bg_color AS bgColor,
            i.id AS itemId,
            i.item_name AS itemName,
            ii.url AS itemUrl,
            i.created_time AS createdTime
        FROM
            category f
                LEFT JOIN
            items i
            ON
                f.id=i.root_cat_id
                LEFT JOIN
            items_img ii
            ON
                i.id= ii.item_id
        WHERE
            f.type=1
          AND
            i.root_cat_id=#{paramMap.rootCatId}
          AND
            ii.is_main=1
        ORDER BY
            i.created_time
        LIMIT
            0,6
    </select>

    <select id="searchItems" resultType="com.feng.springboot.entity.Vo.SearchItemVO" parameterType="Map">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            tempSpec.price_discount AS price
        FROM
            items i
                LEFT JOIN
            items_img ii
            ON
                i.id=ii.item_id
                LEFT JOIN
            (SELECT item_id,MIN(price_discount)AS price_discount
             FROM
                 items_spec
             GROUP BY
                 item_id
            ) tempSpec
            ON
                i.id=tempSpec.item_id
        WHERE
            ii.is_main=1
        <if test="paramsMap.keywords !=null and paramsMap.keywords !=''">
            AND
              i.item_name like '%${paramsMap.keywords}%'
        </if>
        order by
            <choose>
                <when test="paramsMap.sort == &quot;c&quot; ">
                    i.sell_counts desc
                </when>
                <when test="paramsMap.sort== &quot;p&quot; ">
                    tempSpec.price_discount asc
                </when>
            <otherwise>
                i.item_name asc
            </otherwise>
            </choose>
    </select>
    
    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.feng.springboot.entity.Vo.ShopcartVO">
        SELECT
            t_items.id AS itemId,
            t_items.item_name AS itemName,
            t_items_img.url AS itemImgUrl,
            t_items_spec.id AS specId,
            t_items_spec.`name`AS specName,
            t_items_spec.price_discount AS priceDiscount,
            t_items_spec.price_normal AS priceNormal
        FROM
            items_spec t_items_spec
                LEFT JOIN
            items t_items
            ON
                t_items.id=t_items_spec.item_id
                LEFT JOIN
            items_img t_items_img
            ON
                t_items_img.item_id=t_items.id
        WHERE
            t_items_img.is_main=1
          AND
                t_items_spec.id IN
            <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
                #{specId}
            </foreach>

    </select>
</mapper>